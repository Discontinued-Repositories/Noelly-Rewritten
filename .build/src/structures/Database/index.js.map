{
  "version": 3,
  "sources": ["../../../../src/structures/Database/index.ts"],
  "sourcesContent": ["import mongoose, { ConnectOptions } from \"mongoose\";\nimport chalk from 'chalk';\nimport { newClient } from \"../Client\";\n\nmongoose.set(\"strictQuery\", true);\n\ninterface MongooseConnectOptions extends ConnectOptions {\n  useNewUrlParser: boolean;\n  useUnifiedTopology: boolean;\n}\n\nexport class Database {\n  private client: newClient;\n\n  constructor(client: newClient) {\n    this.client = client;\n  }\n\n  async start(): Promise<void> {\n    try {\n      const mongooseOptions: MongooseConnectOptions = {\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n      };\n\n      await mongoose.connect(process.env.MONGODB, mongooseOptions);\n\n      console.log(chalk.white.bold(\"\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501[ Database ]\"))\n      console.log(`${chalk.whiteBright.bold(`[ ${chalk.blueBright.bold(\"Mongoose\")} ]`)} Status: ${chalk.greenBright.bold(\"loaded\")}`)\n    } catch (err) {\n      console.log(`Vixi deu erro na mongoDB\\n${err}`);\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,sBAAyC;AACzC,mBAAkB;AAGlB,wBAAS,IAAI,eAAe;AAOrB,eAAe;AAAA,EACZ;AAAA,EAER,YAAY,QAAmB;AAC7B,SAAK,SAAS;AAAA;AAAA,QAGV,QAAuB;AAC3B,QAAI;AACF,YAAM,kBAA0C;AAAA,QAC9C,iBAAiB;AAAA,QACjB,oBAAoB;AAAA;AAGtB,YAAM,wBAAS,QAAQ,QAAQ,IAAI,SAAS;AAE5C,cAAQ,IAAI,qBAAM,MAAM,KAAK;AAC7B,cAAQ,IAAI,GAAG,qBAAM,YAAY,KAAK,KAAK,qBAAM,WAAW,KAAK,4BAA4B,qBAAM,YAAY,KAAK;AAAA,aAC7G,KAAP;AACA,cAAQ,IAAI;AAAA,EAA6B;AAAA;AAAA;AAAA;",
  "names": []
}
